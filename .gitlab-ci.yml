# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.7

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/


stages:
  - test
  - build

before_script:
  - python -V  # Print out python version for debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate

lint:
  stage: test
  image: python:3.7
  script:
    - python -m pip install --upgrade pip
    - if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
    # stop the build if there are Python syntax errors or undefined names
    - flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    - flake8 . --count --exit-zero --max-line-length=127 --statistics
    # Run pytest unit test cases
    - pytest -m unittest

build_py:
  stage: build
  image: python:3.7
  script:
    # Build module
    - python -m pip install --upgrade pip
    - if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
    - python setup.py bdist_wheel
    - python setup.py bdist_egg
    - ls -la dist/
  artifacts:
    paths:
      - dist/*.whl
      - dist/*.egg
